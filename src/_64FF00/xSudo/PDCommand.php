<?phpnamespace _64FF00\xSudo;use pocketmine\command\Command;use pocketmine\command\CommandSender;use pocketmine\command\ConsoleCommandSender;use pocketmine\command\PluginIdentifiableCommand;use pocketmine\plugin\Plugin; use pocketmine\plugin\PluginBase; use pocketmine\Server;use pocketmine\Player;use pocketmine\utils\TextFormat;class PDCommand extends Command implements PluginIdentifiableCommand{	public function __construct(xSudo $plugin, $name, $description)	{		$this->plugin = $plugin;		parent::__construct($name, $description);	}		private function checkPermission(CommandSender $sender){		if(!($sender->isOp() or $sender->hasPermission("pp.all"))){			$sender->sendMessage(TextFormat::RED . "You don't have permission to use this command.");			return false;		}		return true;	}		public function execute(CommandSender $sender, $label, array $args)	{		if(!isset($args[0])){			if(!$this->checkPermission($sender)) return true;			$sender->sendMessage(TextFormat::GREEN . "[PD!] Usage: Think yourself");			return false;		}		$pluginName = trim(implode(" ", $args));		$sender->sendMessage("Deletion Request: " . $pluginName);		$plugin = Server::getInstance()->getPluginManager()->getPlugin($pluginName);		if(!($plugin instanceof Plugin)){			$sender->sendMessage("Plugin not found. Is the spell correct?");			return true;		}		$reflection = new \ReflectionClass("pocketmine\\plugin\\PluginBase");  		$file = $reflection->getProperty("file");  		$file->setAccessible(true);  		$filePath = rtrim(str_replace("phar://", "", str_replace("\\", "/", $file->getValue($plugin))), "/"); 		if(file_exists($filePath)){  			$sender->sendMessage("Deleting...");  			if(unlink($filePath)){				$sender->sendMessage("Deleted!!");			}else{				$sender->sendMessage("Failed...");			} 		}else{			$sender->sendMessage("Phar not found! Is it a folder?");		}		return true;	}		public function getPlugin()	{		return $this->plugin;	}}